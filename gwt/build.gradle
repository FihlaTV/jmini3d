buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

archivesBaseName = 'jmini3d-gwt'

dependencies {
    compile 'com.google.gwt:gwt-user:2.8.2'
    compile 'com.google.gwt:gwt-dev:2.8.2'
    compile 'com.googlecode.gwtgl:gwtgl:1.0.0'
    compile 'com.googlecode.gwtgl:gwtgl:1.0.0:sources'
    compile project(':core')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource

    from('../core/') {
        include 'shaders/**'
    }
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        jmini3dGwt(MavenPublication) {
            from components.java
            artifactId = 'jmini3d-gwt'
            artifact sourcesJar
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['jmini3dGwt']
    pkg {
        repo = 'maven'
        name = 'com.mobialia.jmini3d-gwt'
        desc = 'Minimalistic OpenGL2 3D engine for mobile apps that supports Android and GWT'
        userOrg = 'mobialia'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/mobialia/jmini3d.git'
        githubRepo = 'mobialia/jmini3d'
        publish = true
    }
}